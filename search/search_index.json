{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Projectile Motion: Range vs. Angle of Projection - Detailed Analysis Introduction: A Journey into Trajectory Welcome to an exploration of projectile motion, a fundamental concept in physics that governs the flight of objects through the air. From the arc of a thrown ball to the trajectory of a rocket, understanding projectile motion allows us to predict and control the paths of countless objects. This presentation dives deep into the underlying principles, practical applications, and computational modeling of this fascinating phenomenon. 1. Theoretical Foundation: Unraveling the Motion Derivation of Governing Equations: A Step-by-Step Approach Let's delve deeper into the derivation. We begin with Newton's second law, \\(\\vec{F} = m\\vec{a}\\) . The only force acting on the projectile is gravity, \\(\\vec{F} = m\\vec{g}\\) , where \\(\\vec{g} = (0, -g)\\) and \\(g \\approx 9.81 \\, \\text{m/s}^2\\) . From this, we get the acceleration vector: \\[\\vec{a} = \\frac{\\vec{F}}{m} = \\vec{g} = (0, -g)\\] This leads to the following differential equations: \\[\\frac{d^2x}{dt^2} = 0\\] \\[\\frac{d^2y}{dt^2} = -g\\] Integrating once with respect to time \\(t\\) , we obtain the velocity components: \\[\\frac{dx}{dt} = v_x(t) = v_{0x} = v_0 \\cos(\\theta)\\] \\[\\frac{dy}{dt} = v_y(t) = v_{0y} - gt = v_0 \\sin(\\theta) - gt\\] Integrating again, we get the position components: \\[x(t) = v_{0x} t = v_0 \\cos(\\theta) t\\] \\[y(t) = v_{0y} t - \\frac{1}{2}gt^2 = v_0 \\sin(\\theta) t - \\frac{1}{2}gt^2\\] These are the parametric equations describing the projectile's trajectory. Family of Solutions: Visualizing the Possibilities The parameters \\(v_0\\) and \\(\\theta\\) define a family of parabolic trajectories. Each combination of these values corresponds to a unique path. 2. Analysis of the Range: Maximizing Distance Range Equation: Derivation and Interpretation As derived previously, the range \\(R\\) is given by: \\[R = \\frac{v_0^2}{g} \\sin(2\\theta)\\] Initial Velocity ( \\(v_0\\) ): The range increases quadratically with \\(v_0\\) . Doubling the initial velocity quadruples the range. Launch Angle ( \\(\\theta\\) ): The range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs at \\(\\theta = 45^\\circ\\) . Gravitational Acceleration ( \\(g\\) ): The range is inversely proportional to \\(g\\) . On a planet with lower gravity, the range would be greater. Python Code Snippets for Projectile Motion Analysis Range vs. Angle Graph import numpy as np import matplotlib.pyplot as plt def projectile_range(v0, theta, g=9.81): theta_rad = np.radians(theta) return (v0**2 / g) * np.sin(2 * theta_rad) def plot_range_vs_angle(v0, g=9.81): angles = np.linspace(0, 90, 100) ranges = projectile_range(v0, angles, g) plt.plot(angles, ranges) plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (meters)\") plt.title(f\"Range vs. Angle (v0 = {v0} m/s, g = {g} m/s^2)\") plt.grid(True) plt.savefig(\"range_vs_angle.png\") plt.show() v0 = 25 plot_range_vs_angle(v0) This graph showcases the relationship between launch angle and range, demonstrating the peak at 45 degrees. Projectile Trajectories Graph import numpy as np import matplotlib.pyplot as plt def projectile_trajectory(v0, theta, t, g=9.81): theta_rad = np.radians(theta) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y def plot_trajectories(v0, angles, g=9.81): plt.figure() for theta in angles: time_flight = (2 * v0 * np.sin(np.radians(theta)))/g times = np.linspace(0, time_flight, 100) x, y = projectile_trajectory(v0, theta, times, g) plt.plot(x, y, label=f\"\u03b8 = {theta}\u00b0\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(f\"Projectile Trajectories (v0 = {v0} m/s)\") plt.grid(True) plt.legend() plt.savefig(\"trajectories.png\") plt.show() v0 = 25 plot_trajectories(v0, [30, 45, 60]) These graphs show the different paths of a projectile based on angle change. 3. Practical Applications: Beyond the Textbook Real-World Relevance: From Sports to Space Projectile motion finds applications in various domains, including: Sports: Optimizing the trajectory of balls in golf, baseball, and soccer. Military: Calculating the flight paths of artillery shells and rockets. Engineering: Designing fluid systems, such as water jets and sprinklers. Space Exploration: Predicting the orbits of spacecraft and satellites. 4. Implementation: Computational Modeling Enhancing Realism: Incorporating Complexities To bridge the gap between idealized models and real-world scenarios, we can incorporate factors such as: Air Resistance: Introducing a drag force to account for air friction. Variable Gravity: Modeling the change in gravitational acceleration with altitude. Wind Effects: Simulating the impact of wind on the projectile's path. Terrain Modeling: Accounting for uneven terrain using digital elevation models. Projectile Trajectories with Drag Graph import numpy as np import matplotlib.pyplot as plt def projectile_trajectory_drag(v0, theta, drag_coeff, t_max, dt=0.01, g=9.81): theta_rad = np.radians(theta) vx, vy = v0 * np.cos(theta_rad), v0 * np.sin(theta_rad) x, y = 0, 0 x_coords, y_coords = [x], [y] t = 0 while t < t_max and y >= 0: v = np.sqrt(vx**2 + vy**2) drag_force_x = -drag_coeff * v * vx drag_force_y = -drag_coeff * v * vy ax = drag_force_x ay = -g + drag_force_y vx += ax * dt vy += ay * dt x += vx * dt y += vy * dt x_coords.append(x) y_coords.append(y) t += dt return x_coords, y_coords def plot_trajectories_drag(v0, angles, drag_coeff=0.01): plt.figure() t_max = 10 for theta in angles: x, y = projectile_trajectory_drag(v0, theta, drag_coeff, t_max) plt.plot(x, y, label=f\"\u03b8 = {theta}\u00b0\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(f\"Projectile Trajectories (v0 = {v0} m/s, Drag = {drag_coeff})\") plt.grid(True) plt.legend() plt.savefig(\"trajectories_drag.png\") plt.show() v0 = 25 plot_trajectories_drag(v0, [30, 45, 60]) These graphs demonstrate the impact of air resistance on projectile trajectories, showcasing the deviation from the ideal parabolic path. Limitations and Improvements: Toward Greater Accuracy Refining the Model: Incorporating Advanced Concepts To further enhance the accuracy of our models, we can consider: Variable Drag: Accounting for changes in drag coefficient with velocity and air density. Spin Effects: Incorporating the Magnus effect, which accounts for the influence of spin on trajectory. Coriolis Effect: Considering the impact of Earth's rotation on long-range projectiles. Numerical Methods: Employing advanced numerical methods, such as Runge-Kutta, for complex simulations. Conclusion: A Deeper Understanding Projectile motion, though seemingly simple, offers a rich tapestry of insights into the fundamental principles of physics. By exploring its theoretical foundations, practical applications, and computational modeling, we gain a deeper understanding of the forces that shape the world around us.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-range-vs-angle-of-projection-detailed-analysis","text":"","title":"Projectile Motion: Range vs. Angle of Projection - Detailed Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#introduction-a-journey-into-trajectory","text":"Welcome to an exploration of projectile motion, a fundamental concept in physics that governs the flight of objects through the air. From the arc of a thrown ball to the trajectory of a rocket, understanding projectile motion allows us to predict and control the paths of countless objects. This presentation dives deep into the underlying principles, practical applications, and computational modeling of this fascinating phenomenon.","title":"Introduction: A Journey into Trajectory"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation-unraveling-the-motion","text":"","title":"1. Theoretical Foundation: Unraveling the Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#derivation-of-governing-equations-a-step-by-step-approach","text":"Let's delve deeper into the derivation. We begin with Newton's second law, \\(\\vec{F} = m\\vec{a}\\) . The only force acting on the projectile is gravity, \\(\\vec{F} = m\\vec{g}\\) , where \\(\\vec{g} = (0, -g)\\) and \\(g \\approx 9.81 \\, \\text{m/s}^2\\) . From this, we get the acceleration vector: \\[\\vec{a} = \\frac{\\vec{F}}{m} = \\vec{g} = (0, -g)\\] This leads to the following differential equations: \\[\\frac{d^2x}{dt^2} = 0\\] \\[\\frac{d^2y}{dt^2} = -g\\] Integrating once with respect to time \\(t\\) , we obtain the velocity components: \\[\\frac{dx}{dt} = v_x(t) = v_{0x} = v_0 \\cos(\\theta)\\] \\[\\frac{dy}{dt} = v_y(t) = v_{0y} - gt = v_0 \\sin(\\theta) - gt\\] Integrating again, we get the position components: \\[x(t) = v_{0x} t = v_0 \\cos(\\theta) t\\] \\[y(t) = v_{0y} t - \\frac{1}{2}gt^2 = v_0 \\sin(\\theta) t - \\frac{1}{2}gt^2\\] These are the parametric equations describing the projectile's trajectory.","title":"Derivation of Governing Equations: A Step-by-Step Approach"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#family-of-solutions-visualizing-the-possibilities","text":"The parameters \\(v_0\\) and \\(\\theta\\) define a family of parabolic trajectories. Each combination of these values corresponds to a unique path.","title":"Family of Solutions: Visualizing the Possibilities"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range-maximizing-distance","text":"","title":"2. Analysis of the Range: Maximizing Distance"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-equation-derivation-and-interpretation","text":"As derived previously, the range \\(R\\) is given by: \\[R = \\frac{v_0^2}{g} \\sin(2\\theta)\\] Initial Velocity ( \\(v_0\\) ): The range increases quadratically with \\(v_0\\) . Doubling the initial velocity quadruples the range. Launch Angle ( \\(\\theta\\) ): The range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs at \\(\\theta = 45^\\circ\\) . Gravitational Acceleration ( \\(g\\) ): The range is inversely proportional to \\(g\\) . On a planet with lower gravity, the range would be greater.","title":"Range Equation: Derivation and Interpretation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-code-snippets-for-projectile-motion-analysis","text":"","title":"Python Code Snippets for Projectile Motion Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-vs-angle-graph","text":"import numpy as np import matplotlib.pyplot as plt def projectile_range(v0, theta, g=9.81): theta_rad = np.radians(theta) return (v0**2 / g) * np.sin(2 * theta_rad) def plot_range_vs_angle(v0, g=9.81): angles = np.linspace(0, 90, 100) ranges = projectile_range(v0, angles, g) plt.plot(angles, ranges) plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (meters)\") plt.title(f\"Range vs. Angle (v0 = {v0} m/s, g = {g} m/s^2)\") plt.grid(True) plt.savefig(\"range_vs_angle.png\") plt.show() v0 = 25 plot_range_vs_angle(v0)","title":"Range vs. Angle Graph"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#this-graph-showcases-the-relationship-between-launch-angle-and-range-demonstrating-the-peak-at-45-degrees","text":"","title":"This graph showcases the relationship between launch angle and range, demonstrating the peak at 45 degrees."},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-trajectories-graph","text":"import numpy as np import matplotlib.pyplot as plt def projectile_trajectory(v0, theta, t, g=9.81): theta_rad = np.radians(theta) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y def plot_trajectories(v0, angles, g=9.81): plt.figure() for theta in angles: time_flight = (2 * v0 * np.sin(np.radians(theta)))/g times = np.linspace(0, time_flight, 100) x, y = projectile_trajectory(v0, theta, times, g) plt.plot(x, y, label=f\"\u03b8 = {theta}\u00b0\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(f\"Projectile Trajectories (v0 = {v0} m/s)\") plt.grid(True) plt.legend() plt.savefig(\"trajectories.png\") plt.show() v0 = 25 plot_trajectories(v0, [30, 45, 60])","title":"Projectile Trajectories Graph"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#these-graphs-show-the-different-paths-of-a-projectile-based-on-angle-change","text":"","title":"These graphs show the different paths of a projectile based on angle change."},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications-beyond-the-textbook","text":"","title":"3. Practical Applications: Beyond the Textbook"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#real-world-relevance-from-sports-to-space","text":"Projectile motion finds applications in various domains, including: Sports: Optimizing the trajectory of balls in golf, baseball, and soccer. Military: Calculating the flight paths of artillery shells and rockets. Engineering: Designing fluid systems, such as water jets and sprinklers. Space Exploration: Predicting the orbits of spacecraft and satellites.","title":"Real-World Relevance: From Sports to Space"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation-computational-modeling","text":"","title":"4. Implementation: Computational Modeling"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#enhancing-realism-incorporating-complexities","text":"To bridge the gap between idealized models and real-world scenarios, we can incorporate factors such as: Air Resistance: Introducing a drag force to account for air friction. Variable Gravity: Modeling the change in gravitational acceleration with altitude. Wind Effects: Simulating the impact of wind on the projectile's path. Terrain Modeling: Accounting for uneven terrain using digital elevation models.","title":"Enhancing Realism: Incorporating Complexities"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-trajectories-with-drag-graph","text":"import numpy as np import matplotlib.pyplot as plt def projectile_trajectory_drag(v0, theta, drag_coeff, t_max, dt=0.01, g=9.81): theta_rad = np.radians(theta) vx, vy = v0 * np.cos(theta_rad), v0 * np.sin(theta_rad) x, y = 0, 0 x_coords, y_coords = [x], [y] t = 0 while t < t_max and y >= 0: v = np.sqrt(vx**2 + vy**2) drag_force_x = -drag_coeff * v * vx drag_force_y = -drag_coeff * v * vy ax = drag_force_x ay = -g + drag_force_y vx += ax * dt vy += ay * dt x += vx * dt y += vy * dt x_coords.append(x) y_coords.append(y) t += dt return x_coords, y_coords def plot_trajectories_drag(v0, angles, drag_coeff=0.01): plt.figure() t_max = 10 for theta in angles: x, y = projectile_trajectory_drag(v0, theta, drag_coeff, t_max) plt.plot(x, y, label=f\"\u03b8 = {theta}\u00b0\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(f\"Projectile Trajectories (v0 = {v0} m/s, Drag = {drag_coeff})\") plt.grid(True) plt.legend() plt.savefig(\"trajectories_drag.png\") plt.show() v0 = 25 plot_trajectories_drag(v0, [30, 45, 60])","title":"Projectile Trajectories with Drag Graph"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#these-graphs-demonstrate-the-impact-of-air-resistance-on-projectile-trajectories-showcasing-the-deviation-from-the-ideal-parabolic-path","text":"","title":"These graphs demonstrate the impact of air resistance on projectile trajectories, showcasing the deviation from the ideal parabolic path."},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations-and-improvements-toward-greater-accuracy","text":"","title":"Limitations and Improvements: Toward Greater Accuracy"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#refining-the-model-incorporating-advanced-concepts","text":"To further enhance the accuracy of our models, we can consider: Variable Drag: Accounting for changes in drag coefficient with velocity and air density. Spin Effects: Incorporating the Magnus effect, which accounts for the influence of spin on trajectory. Coriolis Effect: Considering the impact of Earth's rotation on long-range projectiles. Numerical Methods: Employing advanced numerical methods, such as Runge-Kutta, for complex simulations.","title":"Refining the Model: Incorporating Advanced Concepts"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion-a-deeper-understanding","text":"Projectile motion, though seemingly simple, offers a rich tapestry of insights into the fundamental principles of physics. By exploring its theoretical foundations, practical applications, and computational modeling, we gain a deeper understanding of the forces that shape the world around us.","title":"Conclusion: A Deeper Understanding"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 test 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"test 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}